
main:
addi sp,sp,-8 # allocate 8 (2 integer) bytes on the stack
addi x19,x0,5   #X19 = TEMP = 5
addi x20,x0,3   #x20 = temp = 3
sw x19,4(sp)    # push 5 to the stack ; pass argument temp
sw x20 0(sp)    # push 3 to the stack ; pass argument TEMP
jal foo #call foo()
add x18,x0,a0   #result = value return from foo(3,5)
addi sp,sp,8    #deallocate 8 bytes on the stack

#todo 
#printf("result is %d\n", result);
#return 0;

bar:
#การจับคู่ register:
#	n = x18
#   i = x19
#   sum	= x20	
addi x19,x0,0   #i = 0
lw x18,0(sp)    #load n from stack to x18 ; x18=n
start_loop:
bge x19,x18,exit_loop
add x20,x20,x19  # sum = sum +i
addi x19,x19,1 
j start_loop_i
exit_loop:
add a0,x0,x20
jr ra

foo:
addi x21,x0,0   #sum=0
addi x20,x0,0   #i = 0
lw x19,4(sp)    #เอาค่า n ออกมา load n (argument 2 ) from stack to x19
start_loop_2:
bge x20,x19,exit_loop_2 # if i>=n goto exit_loop
lw x18,0(sp)    # เอาค่า x ออกมา load x (argument 1 ) from stack to x18
add x21,x21,x18 #sum+=x
addi x20,x20,1  #i++
j start_loop_2
exit_loop_2:

#save sum and ra to the stack
addi sp,sp,-8   #
sw x21,4(sp)
sw ra,0(sp)

#pass argument10 to bar -->bar(10)
addi sp,sp,-4
addi x22,x0,10  #x22=10
sw x22,0(sp)
jal bar
addi sp,sp,4
lw x21,4(sp)
#sum = sum +bar(10)
add x21,x21,a0  #a10 ได้จาก bar(10)

#place sum to a0
add a0,x21,x0

#return
lw ra,0(sp)
addi sp,sp,8
jr ra
